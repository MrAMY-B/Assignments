##################################################################
Author: 		AMOL BHARSAKLE
Date of creation:	16/06/2021
Topic:	  		Java Database Connectivity(JDBC)
Language Used:		JAVA
##################################################################
/*//------------------------------1----------------------------------------------------
1) create a table "Student"
	rollno,name,age
write a java program to accept rollno,name,age from user and insert a row.
after inserting that row try to view using a query.
* /
package jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class Day01 {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter your Details");
		System.out.println("NAME : ");
		String name = sc.nextLine();
		
		System.out.println("RollNo : ");
		int rollNo=sc.nextInt();
		
		System.out.println("AGE : ");
		int age=sc.nextInt();
		
		try {
			//Class.forName("com.mysql.cj.jdbc.Driver");  //Now it happens implicitly so no need
			
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/java", "root", "AmolBharsakle");
			PreparedStatement ps = con.prepareStatement("select count(*) from student where rollno=?");
			ps.setInt(1, rollNo);
			ResultSet rs = ps.executeQuery();
			rs.next();
			int count=rs.getInt(1);
			if(count>0) {
				System.out.println("----------------------------\n FAILED");
				System.out.println("This RollNo is used : ");
				rs=null; ps=null;
			}
			else{
			
			ps = con.prepareStatement("insert into student values(?,?,?)");
			ps.setInt(1, rollNo);
			ps.setString(2, name);
			ps.setInt(3, age);
			int res=ps.executeUpdate();
			if(res>0)
				System.out.println("----------------------------\n SUCCESS");
			else
				System.out.println("----------------------------\n FAILED");
			} //else block ends here
			
		} catch ( SQLException e) {
			e.printStackTrace();
		}

		sc.close();
	}

}





/*//------------------------------2----------------------------------------------------
2) create table "Employee"
	   empid,empname,desig
	add 5 records manually.
  Now write a java program to accept "designation" from user and retrieve employees with the given designation.
*/
package jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class Day01 {

	public static void main(String[] args) {
		
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter Designation to find  all employee:");
		System.out.println(" : ");
		String desig = sc.nextLine();
	
		
		try {
			//Class.forName("com.mysql.cj.jdbc.Driver");  //Now it happens implicitly so no need
			
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/java", "root", "AmolBharsakle");
			PreparedStatement  ps = con.prepareStatement("select * from employee where desig=?");
			ps.setString(1, desig);
			ResultSet rs=ps.executeQuery();
			int res=0;
			while(rs.next()) {
				System.out.println(res+++"| EMPID"+rs.getInt("empid")+" , EMP_NAME : "+rs.getString("empname")+" , DESIGNATION : "+rs.getString("desig"));
			}
			if(res>0)
				System.out.println("----------------------------\n DONE");
			else
				System.out.println("----------------------------\n FAILED");
			 //else block ends here
			
		} catch ( SQLException e) {
			e.printStackTrace();
		}

		sc.close();
	}

}
/*//------------------------------3----------------------------------------------------
3) Object Persistence inside database
create a table "Product" with
	pid number
	qty number
	cost decimal
	pname varchar
[ do not add any record ]

define a class "Product" with
	private int pid,qty;
	private double cost;
	private String pname;
		setters,getters,parameterized constructor and toString()

create 1 instance of above class , display it and then insert a row inside Product with the help of above instance.
	now assign "null" to the above instance. That means your heap based object will be soon garbage collected , but you need not worry as you have saved the state of an object inside the database.
	now fire a query to read that record and with the help of it initialize new object of "Product" and display it.
 */
package jdbc;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

public class Day01 {

	public static void main(String[] args) {
		
		
		
		try {
			//Class.forName("com.mysql.cj.jdbc.Driver");  //Now it happens implicitly so no need
			Product p = new Product(4, 12, 768.31, "P-Tron Ear Buds");
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/java", "root", "AmolBharsakle");
			PreparedStatement  ps = con.prepareStatement("insert into product values(?,?,?,?)");
			ps.setInt(1, p.getPid());
			ps.setInt(2, p.getQty());
			ps.setDouble(3, p.getCost());
			ps.setString(4, p.getPname());
			int res=ps.executeUpdate();
			
			if(res>0)
				System.out.println("----------------------------\nPRODUCT ADDED");
			else
				System.out.println("----------------------------\n FAILED");
			 //else block ends here
			ps = con.prepareStatement("select * from product");
			ResultSet rs = ps.executeQuery();
			System.out.println("----------------------------\nTOTAL PRODUCTS");
			while(rs.next()) {
				System.out.println("Product | Pid:"+rs.getInt("pid")+", Qty:"+rs.getInt("qty")+", cost:"+rs.getDouble("cost")+", PName:"+rs.getString("pname"));
			}
			
			
		} catch ( SQLException e) {
			e.printStackTrace();
		}

		
	}

}

class Product{
	private int pid ;
	private int qty;
	private double cost;
	private String pname;

	public Product(int pid, int qty, double cost, String pname) {
		super();
		this.pid = pid;
		this.qty = qty;
		this.cost = cost;
		this.pname = pname;
	}

	public int getPid() {
		return pid;
	}

	public void setPid(int pid) {
		this.pid = pid;
	}

	public int getQty() {
		return qty;
	}

	public void setQty(int qty) {
		this.qty = qty;
	}

	public double getCost() {
		return cost;
	}

	public void setCost(double cost) {
		this.cost = cost;
	}

	public String getPname() {
		return pname;
	}

	public void setPname(String pname) {
		this.pname = pname;
	}

	@Override
	public String toString() {
		return "Product [pid=" + pid + ", qty=" + qty + ", cost=" + cost + ", pname=" + pname + "]";
	}
}

